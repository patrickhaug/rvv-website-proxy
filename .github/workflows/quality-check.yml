name: Check

on:
  push:
    branches:
      - "*"
      - "*/*"
      - "**"
      - "!master"

  repository_dispatch:
    types:
     - refresh_cache_requested # RefreshCaches workflow trigger this periodically to avoid cache eviction

env:
  CACHE_ID: 'check-v1'
  GATSBY_GOOGLE_RECAPTCHA_KEY: ${{ secrets.ROCHE_GOOGLE_RECAPTCHA_SITE_KEY }}
  GATSBY_ROCHE_COMPONENTS_LIBRARY_URL: ${{ secrets.ROCHE_COMPONENTS_LIBRARY_URL }}
  STORYBLOK_API_KEY_NAME: ${{ secrets.LIVE_STORYBLOK_API_KEY_NAME }}
  STORYBLOK_SPACE_NAME: ${{ secrets.STORYBLOK_SPACE_NAME }}

jobs:
  build-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Caching Gatsby
        id: gatsby-cache-build
        uses: actions/cache@v2
        with:
          path: |
            public
            .cache
          key: ${{ runner.os }}-gatsby-build-${{ env.CACHE_ID }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build-${{ env.CACHE_ID }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup Node
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install packages
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: npm ci

      - name: Run Lint verification
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: npm run lint

      - name: Run Tests
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: npm run test || true # Tests not blocking for while

      - name: Generate Audit report
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: npm audit || true # Audit not blocking for while

      - name: Configure AWS Credentials
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ROCHE_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ROCHE_AWS_SECRET_ACCESS_KEY }}
          aws-region:  ${{ secrets.ROCHE_AWS_DEFAULT_REGION }}

      - name: Set GATSBY_STORYBLOK_SPACE_API_KEY
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: . ./scripts/set-gatsby-storyblok-space-api-key.sh

      - name: Set GATSBY_STORYBLOK_SPACE_API_KEY_NAME
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: . ./scripts/set-gatsby-storyblok-space-api-key-name.sh

      - name: Set COGNITO_USERPOOL_ID (Depends on STORYBLOK_SPACE_NAME)
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: . ./scripts/set-cognito-user-pool.sh

      - name: Set COGNITO_USERPOOL_CLIENT_ID (Depends on STORYBLOK_SPACE_NAME and COGNITO_USERPOOL_ID)
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: . ./scripts/set-cognito-user-pool-client.sh

      - name: Build the website
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: npm run build
        env:
          CI: true
          GATSBY_ENV: production
          GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES: false
          NODE_OPTIONS: --max-old-space-size=7168
