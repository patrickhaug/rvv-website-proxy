name: ReleaseStaging # IMPORTANT!!! This name must not be changed !!!!  It is used to check for running workflows.

on:
  push:
    branches:
      - staging
  
  repository_dispatch:
    types:
      - live_staging_website_deploy_requested
      - refresh_cache_requested # RefreshCaches workflow trigger this periodically to avoid cache eviction

env:
  CACHE_ID: 'live-staging-v1'
  AWS_S3_BUCKET: live.roche-website-starter-staging
  DISTRIBUTION: E1S8JW4O3YRGA3
  GATSBY_GOOGLE_RECAPTCHA_KEY: ${{ secrets.ROCHE_GOOGLE_RECAPTCHA_SITE_KEY }}
  GATSBY_ROCHE_COMPONENTS_LIBRARY_URL: ${{ secrets.ROCHE_COMPONENTS_LIBRARY_URL }}
  STORYBLOK_API_KEY_NAME: ${{ secrets.LIVE_STORYBLOK_API_KEY_NAME }}
  STORYBLOK_SPACE_ID: 97427
  STORYBLOK_SPACE_NAME: roche-website-starter-staging
  WEBHOOKS_API_URL: ${{ secrets.ROCHE_WEBHOOKS_API_URL }}
  GATSBY_BRIGHTCOVE_ACCOUNT_ID: ${{ secrets.ROCHE_BRIGHTCOVE_ACCOUNT_ID }}
  GATSBY_BRIGHTCOVE_PLAYER_ID: ${{ secrets.ROCHE_BRIGHTCOVE_PLAYER_ID }}

jobs:
  pre-release:
    name: Check if a release with the same version number already exists
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: staging

      - name: Get current package version
        uses: martinbeentjes/npm-get-version-action@v1.0.0
        id: package-version

      - name: Print current version from package.json
        run: echo "${{ steps.package-version.outputs.current-version }}"

      - name: Check if tag already exists
        id: tag_existance
        run: echo "##[set-output name=oldtag;]$(echo $(git tag -l "${{ steps.package-version.outputs.current-version }}"))"

      - name: Validate tag reference from github
        if: ${{ steps.tag_existance.outputs.oldtag != '' }}
        run: exit 1

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: pre-release
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: staging

      - name: Caching Gatsby
        id: gatsby-cache-build
        uses: actions/cache@v2
        with:
          path: |
            public
            .cache
          key: ${{ runner.os }}-gatsby-build-${{ env.CACHE_ID }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build-${{ env.CACHE_ID }}

      - name: Setup Node
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install packages
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: npm ci

      - name: Run Tests
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: npm run test || true # Tests will pass for while

      - name: Generate Audit report
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: npm audit || true # Audit will pass for while

      - name: Configure AWS Credentials
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ROCHE_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ROCHE_AWS_SECRET_ACCESS_KEY }}
          aws-region:  ${{ secrets.ROCHE_AWS_DEFAULT_REGION }}

      - name: Set GATSBY_STORYBLOK_SPACE_API_KEY
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: . ./scripts/set-gatsby-storyblok-space-api-key.sh

      - name: Set GATSBY_STORYBLOK_SPACE_API_KEY_NAME
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: . ./scripts/set-gatsby-storyblok-space-api-key-name.sh

      - name: Set COGNITO_USERPOOL_ID (Depends on STORYBLOK_SPACE_NAME)
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: . ./scripts/set-cognito-user-pool.sh

      - name: Set COGNITO_USERPOOL_CLIENT_ID (Depends on STORYBLOK_SPACE_NAME and COGNITO_USERPOOL_ID)
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: . ./scripts/set-cognito-user-pool-client.sh

      - name: Emit event live_deploy_started
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: . ./scripts/emit-event-live-deploy-started.sh

      - name: Build App
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: npm run build:public
        env:
          CI: true
          GATSBY_ENV: production
          GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES: true
          NODE_OPTIONS: --max-old-space-size=7168

      - name: Get current package version
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        uses: martinbeentjes/npm-get-version-action@v1.0.0
        id: package-version

      - name: Print current version from package.json
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: echo "${{ steps.package-version.outputs.current-version }}"

      - name: Deploy the release version
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        uses: jakejarvis/s3-sync-action@v0.5.1
        env:
          SOURCE_DIR: "public"
          DEST_DIR: "releases/${{ steps.package-version.outputs.current-version }}"

      - name: Deploy the release as latest version
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        uses: jakejarvis/s3-sync-action@v0.5.1
        env:
          SOURCE_DIR: "public"

      - name: Emit event live_deploy_finished
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: . ./scripts/emit-event-live-deploy-finished.sh

      - name: Request Lambda@Edge authorizer to clear the cache
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: . ./scripts/clear-authorizer-lambdaedge.sh
        env:
          LAMBDA_NAME_PREFIX: l

      - name: Invalidate Distribution
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        uses: chetan/invalidate-cloudfront-action@master
        env:
          PATHS: '/*'

      - name: Bump version and push tag
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        uses: anothrNick/github-tag-action@1.17.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
          CUSTOM_TAG: ${{ steps.package-version.outputs.current-version }}
          RELEASE_BRANCHES: master
