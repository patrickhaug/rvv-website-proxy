name: Staging # IMPORTANT!!! This name must not be changed !!!!

on:
  push:
    branches:
      - staging

  repository_dispatch:
    types:
     - storyblok_components_changed
     - storyblok_content_changed
     - staging_website_deploy_requested
     - live_website_deploy_requested
     - refresh_cache_requested # RefreshCaches workflow trigger this periodically to avoid cache eviction

env:
  CACHE_ID: 'staging'
  AWS_S3_BUCKET: ${{ secrets.STAGING_STATIC_WEB_SITE_BUCKET }}
  DISTRIBUTION: ${{ secrets.STAGING_CLOUDFRONT_DISTRIBUTION_ID }}
  GATSBY_GOOGLE_RECAPTCHA_KEY: ${{ secrets.ROCHE_GOOGLE_RECAPTCHA_SITE_KEY }}
  GATSBY_ROCHE_COMPONENTS_LIBRARY_URL: ${{ secrets.STAGING_ROCHE_COMPONENTS_LIBRARY_URL }}
  STORYBLOK_API_KEY_NAME: ${{ secrets.PREVIEW_STORYBLOK_API_KEY_NAME }}
  STORYBLOK_SPACE_ID: ${{ secrets.STORYBLOK_SPACE_ID }}
  STORYBLOK_SPACE_NAME: ${{ secrets.STORYBLOK_SPACE_NAME }}
  WEBHOOKS_API_URL: ${{ secrets.ROCHE_WEBHOOKS_API_URL }}

jobs:
  build-staging:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Caching Gatsby
        id: gatsby-cache-build
        uses: actions/cache@v2
        with:
          path: |
            public
            .cache
          key: ${{ runner.os }}-gatsby-build-${{ env.CACHE_ID }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build-${{ env.CACHE_ID }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup Node
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install packages
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: npm ci

      - name: Run Tests
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: npm run test || true # Tests not blocking for while

      - name: Generate Audit report
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: npm audit || true # Audit not blocking for while

      - name: Configure AWS Credentials
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ROCHE_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ROCHE_AWS_SECRET_ACCESS_KEY }}
          aws-region:  ${{ secrets.ROCHE_AWS_DEFAULT_REGION }}

      - name: Set GATSBY_STORYBLOK_SPACE_API_KEY
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: . ./scripts/set-gatsby-storyblok-space-api-key.sh

      - name: Set COGNITO_USERPOOL_ID (Depends on STORYBLOK_SPACE_NAME)
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: . ./scripts/set-cognito-user-pool.sh

      - name: Set COGNITO_USERPOOL_CLIENT_ID (Depends on STORYBLOK_SPACE_NAME and COGNITO_USERPOOL_ID)
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: . ./scripts/set-cognito-user-pool-client.sh

      - name: Emit event staging_deploy_started
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: . ./scripts/emit-event-staging-deploy-started.sh

      - name: Build the website
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: npm run build
        env:
          GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES: true
          CI: true
          NODE_OPTIONS: --max-old-space-size=7168

      - name: Deploy staging (public)
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        uses: jakejarvis/s3-sync-action@v0.5.1
        env:
          SOURCE_DIR: "public"

      - name: Emit event staging_deploy_finished
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: . ./scripts/emit-event-staging-deploy-finished.sh

      - name: Request Lambda@Edge authorizer to clear the cache
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        run: . ./scripts/clear-authorizer-lambdaedge.sh         

      - name: Invalidate Distribution
        if: ${{ github.event.action != 'refresh_cache_requested' }}
        uses: chetan/invalidate-cloudfront-action@master
        env:
          PATHS: '/*'
